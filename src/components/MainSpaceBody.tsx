import React from 'react';

export type TabType = 'common' | 'items' | 'runes' | 'gems' | 'skills' | 'other';

interface MainSpaceBodyProps {
  activeTab: TabType;
  language: 'en' | 'ru';
  isDarkTheme: boolean;
}

const MainSpaceBody: React.FC<MainSpaceBodyProps> = ({ activeTab, language, isDarkTheme }) => {
  const renderContent = () => {
    switch (activeTab) {
      case 'common':
        return (
          <div className="p-8 text-center h-full flex flex-col justify-center">
            <div className="max-w-md mx-auto">
              <div className="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-white text-2xl font-bold">‚öôÔ∏è</span>
              </div>
              <h2 className={`text-2xl font-medium mb-4 ${
                isDarkTheme ? 'text-white' : 'text-gray-900'
              }`}>
                {language === 'en' ? 'Common' : '–û–±—â–µ–µ'}
              </h2>
              <p className={`leading-relaxed ${
                isDarkTheme ? 'text-gray-300' : 'text-gray-600'
              }`}>
                {language === 'en' ? 'Common utilities and tools' : '–û–±—â–∏–µ —É—Ç–∏–ª–∏—Ç—ã –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'}
              </p>
            </div>
          </div>
        );
      case 'items':
        return (
          <div className="p-8 text-center h-full flex flex-col justify-center">
            <div className="max-w-md mx-auto">
              <div className="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-white text-2xl font-bold">üó°Ô∏è</span>
              </div>
              <h2 className={`text-2xl font-medium mb-4 ${
                isDarkTheme ? 'text-white' : 'text-gray-900'
              }`}>
                {language === 'en' ? 'Items' : '–ü—Ä–µ–¥–º–µ—Ç—ã'}
              </h2>
              <p className={`leading-relaxed ${
                isDarkTheme ? 'text-gray-300' : 'text-gray-600'
              }`}>
                {language === 'en' ? 'Item management and analysis' : '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥–º–µ—Ç–æ–≤'}
              </p>
            </div>
          </div>
        );
      case 'runes':
        return (
          <div className="p-8 text-center h-full flex flex-col justify-center">
            <div className="max-w-md mx-auto">
              <div className="w-16 h-16 bg-purple-500 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-white text-2xl font-bold">üîÆ</span>
              </div>
              <h2 className={`text-2xl font-medium mb-4 ${
                isDarkTheme ? 'text-white' : 'text-gray-900'
              }`}>
                {language === 'en' ? 'Runes' : '–†—É–Ω—ã'}
              </h2>
              <p className={`leading-relaxed ${
                isDarkTheme ? 'text-gray-300' : 'text-gray-600'
              }`}>
                {language === 'en' ? 'Rune management and combinations' : '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä—É–Ω–∞–º–∏ –∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏'}
              </p>
            </div>
          </div>
        );
      case 'gems':
        return (
          <div className="p-8 text-center h-full flex flex-col justify-center">
            <div className="max-w-md mx-auto">
              <div className="w-16 h-16 bg-red-500 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-white text-2xl font-bold">üíé</span>
              </div>
              <h2 className={`text-2xl font-medium mb-4 ${
                isDarkTheme ? 'text-white' : 'text-gray-900'
              }`}>
                {language === 'en' ? 'Gems' : '–ö–∞–º–Ω–∏'}
              </h2>
              <p className={`leading-relaxed ${
                isDarkTheme ? 'text-gray-300' : 'text-gray-600'
              }`}>
                {language === 'en' ? 'Gem management and upgrades' : '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–º–Ω—è–º–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è'}
              </p>
            </div>
          </div>
        );
      case 'skills':
        return (
          <div className="p-8 text-center h-full flex flex-col justify-center">
            <div className="max-w-md mx-auto">
              <div className="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-white text-2xl font-bold">‚ö°</span>
              </div>
              <h2 className={`text-2xl font-medium mb-4 ${
                isDarkTheme ? 'text-white' : 'text-gray-900'
              }`}>
                {language === 'en' ? 'Skills' : '–°–∫–∏–ª–ª—ã'}
              </h2>
              <p className={`leading-relaxed ${
                isDarkTheme ? 'text-gray-300' : 'text-gray-600'
              }`}>
                {language === 'en' ? 'Skill tree and build planning' : '–î–µ—Ä–µ–≤–æ –Ω–∞–≤—ã–∫–æ–≤ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–ª–¥–æ–≤'}
              </p>
            </div>
          </div>
        );
      case 'other':
        return (
          <div className="p-8 text-center h-full flex flex-col justify-center">
            <div className="max-w-md mx-auto">
              <div className="w-16 h-16 bg-gray-500 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-white text-2xl font-bold">üì¶</span>
              </div>
              <h2 className={`text-2xl font-medium mb-4 ${
                isDarkTheme ? 'text-white' : 'text-gray-900'
              }`}>
                {language === 'en' ? 'Other' : '–ü—Ä–æ—á–µ–µ'}
              </h2>
              <p className={`leading-relaxed ${
                isDarkTheme ? 'text-gray-300' : 'text-gray-600'
              }`}>
                {language === 'en' ? 'Additional tools and utilities' : '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã'}
              </p>
            </div>
          </div>
        );
      default:
        return <div>Unknown tab</div>;
    }
  };

  return (
    <div className="flex-1 h-full">
      {renderContent()}
    </div>
  );
};

export default MainSpaceBody; 